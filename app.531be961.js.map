{"version":3,"sources":["1/app.js"],"names":["App","canvas","document","getElementById","pixelRatio","window","devicePixelRatio","width","innerWidth","height","innerHeight","statusElm","inputElm","inputWordElm","startElm","resultElm","finalScoreElm","playElm","defaultSpeed","speedVariable","defaultSpawnInterval","life","spawnT","undefined","scoreT","words","keywords","onScreenKeywords","score","resize","addEventListener","handleInput","bind","start","e","code","inputText","value","removeWord","setInterval","setTimeout","addWord","spawnWord","Math","floor","random","candidate","filter","keyword","includes","text","length","push","makeWord","elm","createElement","classList","add","innerHTML","img","src","cloud","appendChild","pos","word","bottom","left","speed","wordIdx","findIndex","onScreenIdx","removeChild","splice","forEach","showStatus","style","display","focus","init","scoring","requestAnimationFrame","animate","clearTimeout","clearInterval","t","update","move","gameover","test","navigator","userAgent","onload"],"mappings":"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","file":"app.531be961.js","sourceRoot":"../src","sourcesContent":["import cloud from \"./blackCloud.png\";\n\nclass App {\n  constructor() {\n    // screen setting\n    this.canvas = document.getElementById(\"app\");\n    this.pixelRatio = window.devicePixelRatio > 1 ? 2 : 1;\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.statusElm = document.getElementById(\"status\");\n    this.inputElm = document.getElementById(\"input\");\n    this.inputWordElm = document.getElementById(\"inputWord\");\n    this.startElm = document.getElementById(\"start\");\n    this.resultElm = document.getElementById(\"result\");\n    this.finalScoreElm = document.getElementById(\"finalScore\");\n    this.playElm = document.getElementById(\"play\");\n    // game setting\n    this.defaultSpeed = 3;\n    this.speedVariable = 3;\n    this.defaultSpawnInterval = 2000;\n    this.life = 10;\n    this.spawnT = undefined;\n    this.scoreT = undefined;\n    // game data\n    this.words = [];\n    this.keywords = [\n      \"고양이\",\n      \"강아지\",\n      \"거북이\",\n      \"토끼\",\n      \"뱀\",\n      \"사자\",\n      \"호랑이\",\n      \"표범\",\n      \"치타\",\n      \"하이에나\",\n      \"기린\",\n      \"코끼리\",\n      \"코뿔소\",\n      \"하마\",\n      \"악어\",\n      \"펭귄\",\n      \"부엉이\",\n      \"올빼미\",\n      \"곰\",\n      \"돼지\",\n      \"소\",\n      \"닭\",\n      \"독수리\",\n      \"타조\",\n      \"고릴라\",\n      \"오랑우탄\",\n      \"침팬지\",\n      \"원숭이\",\n      \"코알라\",\n      \"캥거루\",\n      \"고래\",\n      \"상어\",\n      \"칠면조\",\n      \"직박구리\",\n      \"쥐\",\n      \"청설모\",\n      \"메추라기\",\n      \"앵무새\",\n      \"삵\",\n      \"스라소니\",\n      \"판다\",\n      \"오소리\",\n      \"오리\",\n      \"거위\",\n      \"백조\",\n      \"두루미\",\n      \"고슴도치\",\n      \"두더지\",\n      \"우파루파\",\n      \"맹꽁이\",\n    ];\n    this.onScreenKeywords = [];\n    this.score = 0;\n\n    // event listener\n    this.resize();\n    this.inputWordElm.addEventListener(\"keydown\", this.handleInput.bind(this));\n    this.playElm.addEventListener(\"click\", this.start.bind(this));\n    window.addEventListener(\"resize\", this.resize.bind(this), false);\n  }\n\n  resize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n  handleInput(e) {\n    if (e.code === \"Enter\") {\n      const inputText = this.inputWordElm.value;\n      this.removeWord(inputText);\n      this.inputWordElm.value = \"\";\n    }\n  }\n  scoring() {\n    this.scoreT = setInterval(() => {\n      this.score += 1;\n      if (this.score % 15 === 0) {\n        this.defaultSpawnInterval /= 2;\n      }\n    }, 1000);\n  }\n  spawnWord() {\n    this.spawnT = setTimeout(() => {\n      this.addWord();\n      this.spawnWord();\n    }, this.defaultSpawnInterval + Math.floor((Math.random() - 0.5) * 1000));\n  }\n  addWord() {\n    const candidate = this.keywords.filter(\n      (keyword) => !this.onScreenKeywords.includes(keyword)\n    );\n    const text = candidate[Math.floor(Math.random() * candidate.length)];\n    this.onScreenKeywords.push(text);\n    this.makeWord(text);\n  }\n  makeWord(text) {\n    const elm = document.createElement(\"div\");\n    elm.classList.add(\"word\");\n    elm.innerHTML = `<span>${text}</span>`;\n    const img = document.createElement(\"img\");\n    img.src = cloud;\n    elm.appendChild(img);\n    const pos = {\n      bottom: -20,\n      left: Math.random() * (this.width - 160),\n    };\n    const word = {\n      elm: elm,\n      pos: pos,\n      text: text,\n      speed: this.defaultSpeed + Math.random() * this.speedVariable,\n    };\n    this.words.push(word);\n    this.canvas.appendChild(elm);\n  }\n  removeWord(text) {\n    const wordIdx = this.words.findIndex((word) => word.text === text);\n    if (wordIdx < 0) {\n      return;\n    }\n    const onScreenIdx = this.onScreenKeywords.findIndex(\n      (word) => word.text === text\n    );\n    this.canvas.removeChild(this.words[wordIdx].elm);\n    this.words.splice(wordIdx, 1);\n    this.onScreenKeywords.splice(onScreenIdx, 1);\n  }\n  update() {\n    this.words.forEach((word) => {\n      word.pos.bottom += word.speed;\n      if (word.pos.bottom > this.height - 210) {\n        this.life -= 1;\n        this.removeWord(word.text);\n        this.showStatus();\n      }\n    });\n  }\n  move() {\n    this.words.forEach((word) => {\n      word.elm.style.bottom = word.pos.bottom + \"px\";\n      word.elm.style.left = word.pos.left + \"px\";\n    });\n  }\n  showStatus() {\n    // life info\n    this.statusElm.innerHTML = `\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path d=\"M12 4.435c-1.989-5.399-12-4.597-12 3.568 0 4.068 3.06 9.481 12 14.997 8.94-5.516 12-10.929 12-14.997 0-8.118-10-8.999-12-3.568z\" />\n      </svg>\n      <span>${this.life}</span>\n      `;\n  }\n  init() {\n    this.inputElm.style.display = \"block\";\n    this.startElm.style.display = \"none\";\n    this.inputWordElm.focus();\n  }\n  start() {\n    this.init();\n    this.showStatus();\n    this.addWord();\n    this.spawnWord();\n    this.scoring();\n    window.requestAnimationFrame(this.animate.bind(this));\n  }\n  gameover() {\n    clearTimeout(this.spawnT);\n    clearInterval(this.scoreT);\n    this.finalScoreElm.innerHTML = `최종 점수 : ${this.score} 초`;\n    this.resultElm.style.display = \"flex\";\n  }\n  animate(t) {\n    this.update();\n    this.move();\n    if (this.life > 0) {\n      window.requestAnimationFrame(this.animate.bind(this));\n    } else {\n      this.gameover();\n    }\n  }\n  isMobile() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    );\n  }\n}\n\nwindow.onload = () => {\n  const app = new App();\n};\n"]}